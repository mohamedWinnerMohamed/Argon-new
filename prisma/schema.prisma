// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model Office {
  id        String      @id @default(auto()) @map("_id") @db.ObjectId
  username  String      @unique
  password  String
  name      String?
  Passenger Passenger[]
}

model Trip {
  id            String      @id @default(auto()) @map("_id") @db.ObjectId
  destination   String
  arrivalDate   DateTime
  departureDate DateTime
  price         Int
  passengers    Passenger[]
  isDone        Boolean     @default(false) 
  createdAt   DateTime @default(now())
}

model Passenger {
  id          String   @id @default(auto()) @map("_id") @db.ObjectId
  trip        Trip     @relation(fields: [tripId], references: [id], onDelete: Cascade)
  tripId      String   @db.ObjectId
  code        String   @unique
  fullName    String
  mediatorName String?
  phone       String
  seatNo      Int
  passportNo  String
  price       Int?
  destination String
  createdBy   Office?  @relation(fields: [officeId], references: [id], onDelete: Cascade)
  createdAt   DateTime @default(now())
  officeId    String?  @db.ObjectId
}

model Sender {
  id       String    @id @default(auto()) @map("_id") @db.ObjectId
  name     String
  phone    String
  movables Movable[]
}

model Movable {
  id            String  @id @default(auto()) @map("_id") @db.ObjectId
  name          String
  receiverName  String
  receiverPhone String
  amount        Int
  price         Int
  destination   String
  notes         String?
  sender        Sender  @relation(fields: [senderId], references: [id], onDelete: Cascade)
  senderId      String  @db.ObjectId
}
